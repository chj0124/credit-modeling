#+TITLE: Pandas
#+OPTIONS: \n:t

* DONE Pandas 提供的对象 [2/5]
CLOSED: [2019-01-31 周四 17:04]
** DONE DataFrame
CLOSED: [2019-01-31 周四 16:19]
** DONE Series
CLOSED: [2019-01-31 周四 16:21]
** TODO Interval
** TODO Index
** TODO Panel
* DONE 创建 DataFrame [2/3]
CLOSED: [2019-01-31 周四 17:04]
** DONE 从字典和列表创建
CLOSED: [2019-01-31 周四 16:29]
#+begin_src python :results output
import pandas as pd

school = {
    "name": ["Trump", "Kevin", "Tony"],
    "age": [18, 30, 66]
}

school_info = pd.DataFrame(school)
print(school_info)
#+end_src

#+RESULTS:
:     name  age
: 0  Trump   18
: 1  Kevin   30
: 2   Tony   66

** DONE 从 Numpy 矩阵创建
CLOSED: [2019-01-31 周四 16:25]
#+begin_src python :results output
import pandas as pd
import numpy as np

x = np.random.rand(3, 3)
col_name = ["x1", "x2", "x3"]
df1 = pd.DataFrame(data=x, columns=col_name)
print(df1)
#+end_src

#+RESULTS:
:          x1        x2        x3
: 0  0.432383  0.110585  0.887397
: 1  0.452030  0.685591  0.440120
: 2  0.427322  0.806993  0.374641

** TODO 从外部读取 [1/2]
*** DONE 从文件读取
CLOSED: [2019-01-31 周四 16:33]
*** TODO 从数据库读取
* DONE DataFrame 的基本索引 [5/5]
CLOSED: [2019-01-31 周四 16:41]
DataFrame 的索引形式灵活，可以写出很多种形式，但是除了向量化索引之外，基本只用记三种形式：

1. df['age']
1. df.loc()
1. df.iloc()

** DONE 按列名索引
CLOSED: [2019-01-31 周四 16:41]
: df1['x1']
** DONE 按多个列名索引
CLOSED: [2019-01-31 周四 16:41]
: df1[['x1', 'x2']]
** DONE 按连续的列名索引
CLOSED: [2019-01-31 周四 16:44]
: df1['x1':'x4']
** DONE 按行列的数字索引
CLOSED: [2019-01-31 周四 16:41]
建议直接使用 .iloc 类方法，不要考虑其他形式。

有一个小坑。

: df1.iloc[3, 4]

** DONE iloc & loc
CLOSED: [2019-01-31 周四 16:41]

